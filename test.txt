template
    main
      div class=board
        div class=column v-for=(column, columnIndex) in columns key=columnIndex
          h2{{ column.title }}h2
          div class=card v-for=(card, cardIndex) in column.cards key=card.id draggable=true
            @dragstart=dragStart(columnIndex, cardIndex) @dragover=dragOver(columnIndex, cardIndex)
            @dragend=dragEnd @drop=drop(columnIndex, cardIndex)
            {{ card.name }}
          div
          div class=add-task @click=addTask(columnIndex)+div
        div
      div
    main
  template
  
  script
  import axios from 'axios';
  
  export default {
    name 'Board',
    data() {
      return {
        columns [],
        draggedCard null,
        draggedCardIndex null,
      };
    },
    mounted() {
      this.fetchData();
    },
    methods {
      async fetchData() {
        try {
          const response = await axios.get('httplocalhost3000columns');
          this.columns = response.data;
        } catch (error) {
          console.error(error);
        }
      },
      dragStart(columnIndex, cardIndex) {
        this.draggedCard = this.columns[columnIndex].cards[cardIndex];
        this.draggedCardIndex = cardIndex;
      },
      dragOver(columnIndex, cardIndex) {
        if (this.draggedCard) {
           Move the card to the new position
          const sourceColumn = this.columns.findIndex((col) = col.cards.includes(this.draggedCard));
          const cardToMove = this.columns[sourceColumn].cards.splice(this.draggedCardIndex, 1)[0];
          this.columns[columnIndex].cards.splice(cardIndex, 0, cardToMove);
          this.draggedCardIndex = cardIndex;
        }
      },
      dragEnd() {
        this.draggedCard = null;
        this.draggedCardIndex = null;
      },
      drop(columnIndex, cardIndex) {
        event.preventDefault();
      },
      addTask(columnIndex) {
        const columnName = this.columns[columnIndex].title;
        const newTaskName = prompt(`Enter a name for the new task in ${columnName}`);
        if (newTaskName) {
          const newTask = {
            id Date.now().toString(),
            name newTaskName,
          };
          this.columns[columnIndex].cards.push(newTask);
        }
      },
    },
  };
  script
  
  style scoped
  .board {
    display flex;
  }
  
  .column {
    flex 1;
    padding 16px;
    background-color #f2f2f2;
    border-radius 4px;
    margin 8px;
  }
  
  .card {
    background-color #fff;
    padding 8px;
    margin-bottom 8px;
    border-radius 4px;
    cursor move;
  }
  
  .add-task {
    background-color #fff;
    padding 8px;
    margin-bottom 8px;
    border-radius 4px;
    text-align center;
    cursor pointer;
    color #888;
    font-size 24px;
    font-weight bold;
  }
  style
  